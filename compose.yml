version: '3.8'

services:
  frontend:
    build: frontend
    ports:
      - ':3000'
    networks:
      - network

  backend:
    build: backend
    ports:
      - ':8080'
    networks:
      - network
    depends_on:
      db:
        condition: service_healthy

  reverse-proxy:
    build: reverse-proxy
    ports:
      - '80:80'
      - '443:443'
    networks:
      - network
    depends_on:
      - frontend
      - backend

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: backend
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - ':5432'
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - network
    healthcheck:
      test: pg_isready -U postgres -d backend
      interval: 2s
      timeout: 2s
      retries: 20

volumes:
  db:

networks:
#  reverse-proxy-frontend:
#  frontend-backend:
#  backend-db:
#

  network:
